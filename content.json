{"meta":{"title":"Hawkingfoo","subtitle":null,"description":null,"author":"Hawkingfoo","url":"https://hawkingfoo.github.io"},"pages":[{"title":"About","date":"2016-09-17T04:11:41.634Z","updated":"2016-09-17T04:11:41.634Z","comments":false,"path":"about/index.html","permalink":"https://hawkingfoo.github.io/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2016-09-16T13:55:02.088Z","updated":"2016-09-16T13:55:02.088Z","comments":true,"path":"categories/index.html","permalink":"https://hawkingfoo.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-09-16T13:55:02.091Z","updated":"2016-09-16T13:55:02.091Z","comments":true,"path":"tags/index.html","permalink":"https://hawkingfoo.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Maven简介及使用","slug":"Maven简介及使用","date":"2016-09-17T13:06:03.000Z","updated":"2016-09-17T13:52:37.432Z","comments":true,"path":"2016/09/17/Maven简介及使用/","link":"","permalink":"https://hawkingfoo.github.io/2016/09/17/Maven简介及使用/","excerpt":"Maven 是一个项目管理和构建自动化工具。但是对于我们程序员来说，我们最关心的是它的项目构建功能。Maven使用惯例优于配置的原则。","text":"Maven 是一个项目管理和构建自动化工具。但是对于我们程序员来说，我们最关心的是它的项目构建功能。Maven使用惯例优于配置的原则。 Maven结构它要求在没有定制之前，所有的项目都有如下的结构： 目录 目的 ${basedir} 存放 pom.xml和所有的子目录 ${basedir}/src/main/java 项目的 java源代码 ${basedir}/src/main/resources 项目的资源，比如说 property文件 ${basedir}/src/test/java 项目的测试类，比如说 JUnit代码 ${basedir}/src/test/resources 测试使用的资源 一个maven项目在默认情况下会产生JAR文件，另外编译后的classes 会放在${basedir}/target/classes下面，JAR 文件会放在${basedir}/target下面。 在这个目录下面，有一个Project Object Model(POM)文件 pom.xml。这个文件用于描述项目，配置插件和管理依赖关系。 创建Maven项目 在命令行中执行下面的命令来建立我们的 hello world 项目。 $mvn archetype:generate -DgroupId=com.mycompany.helloworld -DartifactId=helloworld -Dpackage=com.mycompany.helloworld -Dversion=1.0-SNAPSHOT 我们选择默认的maven-archetype-quickstart，是编号#106。正是我们需要的 Hello World 代码。所以我们可以构建和运行这个程序了。用下面简单的命令构建： $cd helloworld$mvn package 使用Intelij Idea创建Maven项目 常见Maven命令Maven依赖Maven打包插件","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://hawkingfoo.github.io/tags/工具/"}],"keywords":[]},{"title":"Hexo test","slug":"Hexo-test","date":"2016-09-17T03:16:46.000Z","updated":"2016-09-17T03:56:29.820Z","comments":true,"path":"2016/09/17/Hexo-test/","link":"","permalink":"https://hawkingfoo.github.io/2016/09/17/Hexo-test/","excerpt":"","text":"","categories":[{"name":"hexo","slug":"hexo","permalink":"https://hawkingfoo.github.io/categories/hexo/"}],"tags":[],"keywords":[{"name":"hexo","slug":"hexo","permalink":"https://hawkingfoo.github.io/categories/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-09-16T02:47:28.380Z","updated":"2016-09-17T13:02:51.469Z","comments":true,"path":"2016/09/16/hello-world/","link":"","permalink":"https://hawkingfoo.github.io/2016/09/16/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}